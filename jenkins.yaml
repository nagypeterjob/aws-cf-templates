# Created by Peter Nagy - November, 2018
AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for spinning up a HA, self-healing single-master Jenkins cluster 

Parameters: 
  AllowedSSHRange:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 0.0.0.0/0
    Description: Your allowed SSH IP range (eg 196.172.0.0/32).
    Type: String
  KeyPair:
    Description: Keypair you will use to ssh in to jenkins nodes.
    Type: 'AWS::EC2::KeyPair::KeyName'
  MasterInstanceType: 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - t2.large
      - m3.medium
      - m4.large
      - m4.xlarge
      - m4.2xlarge
    Description: Instance type for the master node (according to AWS, m4.large is the best value/performance choice).
  
  MasterAMI: 
    Type: String
    Default: ami-02ea8f348fa28c108
    Description: Instance AMI for the master node (default one is free tier eligible).

  MasterDetailedMonitoring:
    Type: String
    Default: false
    AllowedValues: 
      - false
      - true
    Description: Specifies whether detailed monitoring is enabled for the master instance.

  MasterEBSVolumeSize:
    Type: Number
    Default: 8
    Description: Specifies the EBS volume size of the master instance.

  MasterEFSEncrypted:
    Type: String
    Default: false
    AllowedValues: 
      - false
      - true
    Description: Encryption of the Master's EFS drive storing JENKINS_HOME.

Resources: 
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Stack
          Value:
            Ref: AWS::StackName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Join
      - ''
      - - !Ref 'AWS::Region'
        - 'a'
      Tags:
      - Key: Name
        Value: Private
      - Key: Stack
        Value:
            Ref: AWS::StackName

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Join
      - ''
      - - !Ref 'AWS::Region'
        - 'a'
      Tags:
      - Key: Name
        Value: Public
      - Key: Stack
        Value:
            Ref: AWS::StackName

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Join
      - ''
      - - !Ref 'AWS::Region'
        - 'b'
      Tags:
      - Key: Name
        Value: Public
      - Key: Stack
        Value:
            Ref: AWS::StackName
  
  JenkinsMasterSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Rules to reach Jenkins UI & nodes
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Ref: AllowedSSHRange
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  JenkinsSlaveSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Rules for worker nodes
      VpcId:
        Ref: VPC
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/24 
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  MountTargetSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Security group for mount target
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 2049
        ToPort: 2049
        CidrIp: 0.0.0.0/0

  JenkinsLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: MasterAMI
      SecurityGroups: 
        - Ref: JenkinsMasterSecGroup
      InstanceType: 
        Ref: MasterInstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda    
          Ebs: 
            VolumeType: gp2
            VolumeSize:
              Ref: MasterEBSVolumeSize
      KeyName:
        Ref: KeyPair
      AssociatePublicIpAddress: true 
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -ex
              sudo yum update -y
              sudo yum install java-1.8.0 -y

              echo "Java installed" > status.txt

              mkdir -p /mnt/JENKINS_HOME
              mount -t nfs4 -o nfsvers=4.1 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).${DNS}:/ /mnt/JENKINS_HOME

              echo "nfs4 mounted" >> status.txt

              sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
              sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
              sudo yum install jenkins -y

              echo "Jenkins installed" >> status.txt

              sudo chown jenkins:jenkins /mnt/JENKINS_HOME
              sudo sed -i 's/\/var\/lib\/jenkins/\/mnt\/JENKINS_HOME/g' /etc/sysconfig/jenkins
              echo "$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).${DNS}:/ /mnt/JENKINS_HOME nfsdefaults,vers=4.1 0 0" >> /etc/fstab
              sudo service jenkins start
              echo "Jenkins started" >> status.txt
            - DNS: !Join [ '.', [ !Ref JenkinsEFS , 'efs', !Ref 'AWS::Region', 'amazonaws', 'com' ]]
              Region: !Ref AWS::Region
  JenkinsAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - MountTarget
    Properties:
      AvailabilityZones:
      - !Join
        - ''
        - - !Ref 'AWS::Region'
          - 'a'
      LaunchConfigurationName:
        Ref: JenkinsLaunchConfig
      VPCZoneIdentifier:
        - Ref: PublicSubnetA
      MinSize: 1
      MaxSize: 1
      Tags:
        - Key: Name
          Value: Jenkins Master
          PropagateAtLaunch: true
        - Key: Stack
          Value: 
            Ref: AWS::StackName
          PropagateAtLaunch: true
    
  JenkinsEFS:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted:
        Ref: MasterEFSEncrypted
      FileSystemTags:
        - Key: Name
          Value: Jenkins EFS
  
  MountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: JenkinsEFS
      SubnetId:
        Ref: PublicSubnetA
      SecurityGroups:
        - Ref: MountTargetSecurityGroup

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Stack
          Value: 
            Ref: AWS::StackName
  
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: RouteTable
      GatewayId: 
        Ref: IGW
      DestinationCidrBlock: 0.0.0.0/0

  PublicSubnetAAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: PublicSubnetA

  PublicSubnetBAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: PublicSubnetB

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Stack
          Value:
            Ref: AWS::StackName
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId:
        Ref: IGW
      VpcId:
        Ref: VPC


Metadata: {}
Mappings: {}
Conditions: {}
Outputs: {}

